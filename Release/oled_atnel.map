Archive member included because of file (symbol)

c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr5\libgcc.a(_exit.o)
                              c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/../../../../avr/lib/avr5/crtm32.o (exit)
c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr5\libgcc.a(_copy_data.o)
                              ./main.o (__do_copy_data)
c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr5\libgcc.a(_clear_bss.o)
                              ./UART/uart.o (__do_clear_bss)
c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/../../../../avr/lib/avr5\libc.a(strcmp.o)
                              ./main.o (strcmp)
c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/../../../../avr/lib/avr5\libc.a(itoa.o)
                              ./UART/uart.o (itoa)
c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/../../../../avr/lib/avr5\libc.a(strrev.o)
                              c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/../../../../avr/lib/avr5\libc.a(itoa.o) (strrev)
c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr5\libgcc.a(_udivmodhi4.o)
                              c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/../../../../avr/lib/avr5\libc.a(itoa.o) (__udivmodhi4)

Allocating common symbols
Common symbol       size              file

tmp                 0x1               ./main.o
UART_TxHead         0x1               ./UART/uart.o
oled_buf            0x400             ./SH1106/sh1106.o
UART_TxTail         0x1               ./UART/uart.o
flaga               0x1               ./UART/uart.o
data                0x1               ./main.o
time                0xa               ./main.o
bufor               0x52              ./main.o
header              0x6               ./main.o
UART_TxBuf          0x100             ./UART/uart.o
UART_RxHead         0x1               ./UART/uart.o
UART_RxTail         0x1               ./UART/uart.o
status              0x1               ./main.o
UART_RxBuf          0x100             ./UART/uart.o

Memory Configuration

Name             Origin             Length             Attributes
text             0x00000000         0x00020000         xr
data             0x00800060         0x0000ffa0         rw !x
eeprom           0x00810000         0x00010000         rw !x
fuse             0x00820000         0x00000400         rw !x
lock             0x00830000         0x00000400         rw !x
signature        0x00840000         0x00000400         rw !x
user_signatures  0x00850000         0x00000400         rw !x
*default*        0x00000000         0xffffffff

Linker script and memory map

LOAD c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/../../../../avr/lib/avr5/crtm32.o
LOAD ./UART/uart.o
LOAD ./SH1106/sh1106.o
LOAD ./main.o
LOAD c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr5\libgcc.a
LOAD c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/../../../../avr/lib/avr5\libc.a
LOAD c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr5\libgcc.a

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x00000000     0x1bfc
 *(.vectors)
 .vectors       0x00000000       0x54 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/../../../../avr/lib/avr5/crtm32.o
                0x00000000                __vector_default
                0x00000000                __vectors
 *(.vectors)
 *(.progmem.gcc*)
 *(.progmem*)
 .progmem.data.Font1608
                0x00000054      0x5f0 ./SH1106/sh1106.o
                0x00000054                Font1608
 .progmem.data.Font1612
                0x00000644      0x160 ./SH1106/sh1106.o
                0x00000644                Font1612
 .progmem.data.Font1206
                0x000007a4      0x474 ./SH1106/sh1106.o
                0x000007a4                Font1206
 .progmem.data.Font3216
                0x00000c18      0x2c0 ./SH1106/sh1106.o
                0x00000c18                Font3216
 .progmem.data.bitmap_1
                0x00000ed8      0x400 ./SH1106/sh1106.o
                0x00000ed8                bitmap_1
                0x000012d8                . = ALIGN (0x2)
                0x000012d8                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x000012d8        0x0 linker stubs
 *(.trampolines*)
                0x000012d8                __trampolines_end = .
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x000012d8                __ctors_start = .
 *(.ctors)
                0x000012d8                __ctors_end = .
                0x000012d8                __dtors_start = .
 *(.dtors)
                0x000012d8                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x000012d8        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/../../../../avr/lib/avr5/crtm32.o
                0x000012d8                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x000012d8        0xc c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/../../../../avr/lib/avr5/crtm32.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x000012e4       0x16 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr5\libgcc.a(_copy_data.o)
                0x000012e4                __do_copy_data
 .init4         0x000012fa       0x10 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr5\libgcc.a(_clear_bss.o)
                0x000012fa                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x0000130a        0x8 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/../../../../avr/lib/avr5/crtm32.o
 *(.init9)
 *(.text)
 .text          0x00001312        0x4 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/../../../../avr/lib/avr5/crtm32.o
                0x00001312                __vector_1
                0x00001312                __vector_12
                0x00001312                __bad_interrupt
                0x00001312                __vector_6
                0x00001312                __vector_3
                0x00001312                __vector_11
                0x00001312                __vector_17
                0x00001312                __vector_19
                0x00001312                __vector_7
                0x00001312                __vector_5
                0x00001312                __vector_4
                0x00001312                __vector_9
                0x00001312                __vector_2
                0x00001312                __vector_15
                0x00001312                __vector_8
                0x00001312                __vector_10
                0x00001312                __vector_16
                0x00001312                __vector_18
                0x00001312                __vector_20
 .text          0x00001316        0x0 ./UART/uart.o
 .text          0x00001316        0x0 ./SH1106/sh1106.o
 .text          0x00001316        0x0 ./main.o
 .text          0x00001316        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr5\libgcc.a(_exit.o)
 .text          0x00001316        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr5\libgcc.a(_copy_data.o)
 .text          0x00001316        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr5\libgcc.a(_clear_bss.o)
 .text          0x00001316        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/../../../../avr/lib/avr5\libc.a(strcmp.o)
 .text          0x00001316        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/../../../../avr/lib/avr5\libc.a(itoa.o)
 .text          0x00001316        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/../../../../avr/lib/avr5\libc.a(strrev.o)
 .text          0x00001316        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr5\libgcc.a(_udivmodhi4.o)
                0x00001316                . = ALIGN (0x2)
 *(.text.*)
 .text.USART_Init
                0x00001316        0xe ./UART/uart.o
                0x00001316                USART_Init
 .text.uart_putc
                0x00001324       0x20 ./UART/uart.o
                0x00001324                uart_putc
 .text.uart_puts
                0x00001344       0x18 ./UART/uart.o
                0x00001344                uart_puts
 .text.uart_putint
                0x0000135c       0x3a ./UART/uart.o
                0x0000135c                uart_putint
 .text.__vector_14
                0x00001396       0x4c ./UART/uart.o
                0x00001396                __vector_14
 .text.uart_getc
                0x000013e2       0x28 ./UART/uart.o
                0x000013e2                uart_getc
 .text.__vector_13
                0x0000140a       0x52 ./UART/uart.o
                0x0000140a                __vector_13
 .text.SPIwrite
                0x0000145c       0x20 ./SH1106/sh1106.o
 .text.SH1106_command
                0x0000147c        0xe ./SH1106/sh1106.o
                0x0000147c                SH1106_command
 .text.sh1106_data
                0x0000148a        0xe ./SH1106/sh1106.o
                0x0000148a                sh1106_data
 .text.sh1106_begin_spi
                0x00001498       0x12 ./SH1106/sh1106.o
                0x00001498                sh1106_begin_spi
 .text.sh1106_begin
                0x000014aa       0xb8 ./SH1106/sh1106.o
                0x000014aa                sh1106_begin
 .text.sh1106_clear
                0x00001562       0x14 ./SH1106/sh1106.o
                0x00001562                sh1106_clear
 .text.sh1106_pixel_mirek
                0x00001576       0x54 ./SH1106/sh1106.o
                0x00001576                sh1106_pixel_mirek
 .text.display_ada
                0x000015ca       0xa8 ./SH1106/sh1106.o
                0x000015ca                display_ada
 .text.bitmap   0x00001672       0xf4 ./SH1106/sh1106.o
                0x00001672                bitmap
 .text.SH1106_char3216
                0x00001766       0xa4 ./SH1106/sh1106.o
                0x00001766                SH1106_char3216
 .text.SH1106_char
                0x0000180a       0xfc ./SH1106/sh1106.o
                0x0000180a                SH1106_char
 .text.SH1106_string
                0x00001906       0x9a ./SH1106/sh1106.o
                0x00001906                SH1106_string
 .text.status_gps
                0x000019a0       0x34 ./main.o
                0x000019a0                status_gps
 .text.string_reciver
                0x000019d4       0x46 ./main.o
                0x000019d4                string_reciver
 .text.ramki_gps
                0x00001a1a       0xd4 ./main.o
                0x00001a1a                ramki_gps
 .text.startup.main
                0x00001aee       0x6e ./main.o
                0x00001aee                main
 .text.libgcc.mul
                0x00001b5c        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr5\libgcc.a(_exit.o)
 .text.libgcc.div
                0x00001b5c        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr5\libgcc.a(_exit.o)
 .text.libgcc   0x00001b5c        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr5\libgcc.a(_exit.o)
 .text.libgcc.prologue
                0x00001b5c        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr5\libgcc.a(_exit.o)
 .text.libgcc.builtins
                0x00001b5c        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr5\libgcc.a(_exit.o)
 .text.libgcc.fmul
                0x00001b5c        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr5\libgcc.a(_exit.o)
 .text.libgcc.mul
                0x00001b5c        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr5\libgcc.a(_copy_data.o)
 .text.libgcc.div
                0x00001b5c        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr5\libgcc.a(_copy_data.o)
 .text.libgcc   0x00001b5c        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr5\libgcc.a(_copy_data.o)
 .text.libgcc.prologue
                0x00001b5c        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr5\libgcc.a(_copy_data.o)
 .text.libgcc.builtins
                0x00001b5c        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr5\libgcc.a(_copy_data.o)
 .text.libgcc.fmul
                0x00001b5c        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr5\libgcc.a(_copy_data.o)
 .text.libgcc.mul
                0x00001b5c        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr5\libgcc.a(_clear_bss.o)
 .text.libgcc.div
                0x00001b5c        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr5\libgcc.a(_clear_bss.o)
 .text.libgcc   0x00001b5c        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr5\libgcc.a(_clear_bss.o)
 .text.libgcc.prologue
                0x00001b5c        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr5\libgcc.a(_clear_bss.o)
 .text.libgcc.builtins
                0x00001b5c        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr5\libgcc.a(_clear_bss.o)
 .text.libgcc.fmul
                0x00001b5c        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr5\libgcc.a(_clear_bss.o)
 .text.avr-libc
                0x00001b5c       0x12 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/../../../../avr/lib/avr5\libc.a(strcmp.o)
                0x00001b5c                strcmp
 .text.avr-libc
                0x00001b6e       0x42 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/../../../../avr/lib/avr5\libc.a(itoa.o)
                0x00001b6e                itoa
 .text.avr-libc
                0x00001bb0       0x20 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/../../../../avr/lib/avr5\libc.a(strrev.o)
                0x00001bb0                strrev
 .text.libgcc.mul
                0x00001bd0        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr5\libgcc.a(_udivmodhi4.o)
 .text.libgcc.div
                0x00001bd0       0x28 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr5\libgcc.a(_udivmodhi4.o)
                0x00001bd0                __udivmodhi4
 .text.libgcc   0x00001bf8        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr5\libgcc.a(_udivmodhi4.o)
 .text.libgcc.prologue
                0x00001bf8        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr5\libgcc.a(_udivmodhi4.o)
 .text.libgcc.builtins
                0x00001bf8        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr5\libgcc.a(_udivmodhi4.o)
 .text.libgcc.fmul
                0x00001bf8        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr5\libgcc.a(_udivmodhi4.o)
                0x00001bf8                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x00001bf8        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr5\libgcc.a(_exit.o)
                0x00001bf8                _exit
                0x00001bf8                exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x00001bf8        0x4 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr5\libgcc.a(_exit.o)
 *(.fini0)
                0x00001bfc                _etext = .

.data           0x00800060       0x26 load address 0x00001bfc
                0x00800060                PROVIDE (__data_start, .)
 *(.data)
 .data          0x00800060        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/../../../../avr/lib/avr5/crtm32.o
 .data          0x00800060        0x0 ./UART/uart.o
 .data          0x00800060        0x0 ./SH1106/sh1106.o
 .data          0x00800060        0x0 ./main.o
 .data          0x00800060        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr5\libgcc.a(_exit.o)
 .data          0x00800060        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr5\libgcc.a(_copy_data.o)
 .data          0x00800060        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr5\libgcc.a(_clear_bss.o)
 .data          0x00800060        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/../../../../avr/lib/avr5\libc.a(strcmp.o)
 .data          0x00800060        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/../../../../avr/lib/avr5\libc.a(itoa.o)
 .data          0x00800060        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/../../../../avr/lib/avr5\libc.a(strrev.o)
 .data          0x00800060        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr5\libgcc.a(_udivmodhi4.o)
 *(.data*)
 *(.rodata)
 *(.rodata*)
 .rodata.str1.1
                0x00800060       0x25 ./main.o
 *(.gnu.linkonce.d*)
                0x00800086                . = ALIGN (0x2)
 *fill*         0x00800085        0x1 
                0x00800086                _edata = .
                0x00800086                PROVIDE (__data_end, .)

.bss            0x00800086      0x66a
                0x00800086                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x00800086        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/../../../../avr/lib/avr5/crtm32.o
 .bss           0x00800086        0x0 ./UART/uart.o
 .bss           0x00800086        0x0 ./SH1106/sh1106.o
 .bss           0x00800086        0x0 ./main.o
 .bss           0x00800086        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr5\libgcc.a(_exit.o)
 .bss           0x00800086        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr5\libgcc.a(_copy_data.o)
 .bss           0x00800086        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr5\libgcc.a(_clear_bss.o)
 .bss           0x00800086        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/../../../../avr/lib/avr5\libc.a(strcmp.o)
 .bss           0x00800086        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/../../../../avr/lib/avr5\libc.a(itoa.o)
 .bss           0x00800086        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/../../../../avr/lib/avr5\libc.a(strrev.o)
 .bss           0x00800086        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr5\libgcc.a(_udivmodhi4.o)
 *(.bss*)
 *(COMMON)
 COMMON         0x00800086      0x205 ./UART/uart.o
                0x00800086                UART_TxHead
                0x00800087                UART_TxTail
                0x00800088                flaga
                0x00800089                UART_TxBuf
                0x00800189                UART_RxHead
                0x0080018a                UART_RxTail
                0x0080018b                UART_RxBuf
 COMMON         0x0080028b      0x400 ./SH1106/sh1106.o
                0x0080028b                oled_buf
 COMMON         0x0080068b       0x65 ./main.o
                0x0080068b                tmp
                0x0080068c                data
                0x0080068d                time
                0x00800697                bufor
                0x008006e9                header
                0x008006ef                status
                0x008006f0                PROVIDE (__bss_end, .)
                0x00001bfc                __data_load_start = LOADADDR (.data)
                0x00001c22                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x008006f0        0x0
                0x008006f0                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x008006f0                PROVIDE (__noinit_end, .)
                0x008006f0                _end = .
                0x008006f0                PROVIDE (__heap_start, .)

.eeprom         0x00810000        0x0
 *(.eeprom*)
                0x00810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.user_signatures
 *(.user_signatures*)

.stab           0x00000000      0x9d8
 *(.stab)
 .stab          0x00000000      0x6cc c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/../../../../avr/lib/avr5/crtm32.o
 .stab          0x000006cc       0x84 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/../../../../avr/lib/avr5\libc.a(strcmp.o)
                                 0x90 (size before relaxing)
 .stab          0x00000750      0x1b0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/../../../../avr/lib/avr5\libc.a(itoa.o)
                                0x1bc (size before relaxing)
 .stab          0x00000900       0xd8 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/../../../../avr/lib/avr5\libc.a(strrev.o)
                                 0xe4 (size before relaxing)

.stabstr        0x00000000      0x1f7
 *(.stabstr)
 .stabstr       0x00000000      0x1f7 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/../../../../avr/lib/avr5/crtm32.o

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment        0x00000000       0x2f
 *(.comment)
 .comment       0x00000000       0x2f ./UART/uart.o
                                 0x30 (size before relaxing)
 .comment       0x00000000       0x30 ./SH1106/sh1106.o
 .comment       0x00000000       0x30 ./main.o

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges
 *(.debug_aranges)

.debug_pubnames
 *(.debug_pubnames)

.debug_info
 *(.debug_info)
 *(.gnu.linkonce.wi.*)

.debug_abbrev
 *(.debug_abbrev)

.debug_line
 *(.debug_line)

.debug_frame
 *(.debug_frame)

.debug_str
 *(.debug_str)

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)

.debug_pubtypes
 *(.debug_pubtypes)

.debug_ranges
 *(.debug_ranges)

.debug_macro
 *(.debug_macro)
OUTPUT(oled_atnel.elf elf32-avr)
LOAD linker stubs
